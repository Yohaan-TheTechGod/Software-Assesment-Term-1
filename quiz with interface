import tkinter as tk
from tkinter import messagebox

class QuizApp:
    def __init__(self, root):
        self.root = root
        self.root.title("Quiz App")
        self.root.geometry("400x300")
        self.score = 0
        self.current_question = 0
        
        self.questions = [
            {"question": "What is the capital of Australia?", "options": ["Sydney", "Canberra", "Melbourne", "Perth"], "answer": "Canberra"},
            {"question": "Which planet is known as the Red Planet?", "options": ["Mars", "Earth", "Jupiter", "Venus"], "answer": "Mars"},
            {"question": "Which country has the highest life expectancy'??", "options": ["Japan", "Hong Kong", "Australia", "USA"], "answer": "Hong Kong"}
        ]
        
        self.question_label = tk.Label(root, text=self.questions[self.current_question]["question"], font=("Arial", 14), wraplength=380)
        self.question_label.pack(pady=20)

        self.options = tk.StringVar()
        self.options_frame = tk.Frame(root)
        self.options_frame.pack(pady=10)

        for i, option in enumerate(self.questions[self.current_question]["options"]):
            tk.Radiobutton(self.options_frame, text=option, variable=self.options, value=option, font=("Arial", 12)).pack(anchor="w")
        
        self.submit_button = tk.Button(root, text="Submit", font=("Arial", 12), command=self.submit_answer)
        self.submit_button.pack(pady=20)
    
    def submit_answer(self):
        selected = self.options.get()
        if not selected:
            messagebox.showwarning("Warning", "Please select an answer!")
            return
        
        if selected == self.questions[self.current_question]["answer"]:
            self.score += 1
        
        self.current_question += 1
        if self.current_question < len(self.questions):
            self.update_question()
        else:
            messagebox.showinfo("Quiz Completed", f"Your score: {self.score}/{len(self.questions)}")
            self.root.quit()
    
    def update_question(self):
        self.question_label.config(text=self.questions[self.current_question]["question"])
        for widget in self.options_frame.winfo_children():
            widget.destroy()

        for i, option in enumerate(self.questions[self.current_question]["options"]):
            tk.Radiobutton(self.options_frame, text=option, variable=self.options, value=option, font=("Arial", 12)).pack(anchor="w")

if __name__ == "__main__":
    root = tk.Tk()
    app = QuizApp(root)
    root.mainloop()